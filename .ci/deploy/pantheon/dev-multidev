#!/bin/bash

set -eo pipefail

#
# This script deploys the build artifact to Pantheon.
# On the master branch the dev environment is used.
# Otherwise a multidev environment is used.
#

echo "$CI_PROJECT_REPONAME";

# Do not run certain build jobs on the template repo.
if [[ "$CI_PROJECT_REPONAME" == 'mm-drupal-site-template-d9' ]]
then
  echo "Template repository does not deploy to Pantheon, nothing to do."
else

  # Authenticate with Terminus
  terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

  MDE_ENVIRONMENT='dev'
  terminus -n drush "$TERMINUS_SITE.$MDE_ENVIRONMENT" -- cr

  # Prepare for Pantheon
  composer run prepare-for-pantheon

  if [[ $CI_BRANCH != $DEFAULT_BRANCH ]]
  then
    # Create a new multidev environment (or push to an existing one)
    MDE_ENVIRONMENT=${CI_BRANCH}
    terminus -n build:env:create "$TERMINUS_SITE.live" "$CI_BRANCH" --yes
    terminus -n connection:set "${TERMINUS_SITE}.${MDE_ENVIRONMENT}" git
  else
    # Push to the dev environment
    terminus -n build:env:push "$TERMINUS_SITE.$MDE_ENVIRONMENT" --yes
  fi

  # Update the Drupal database
  terminus -n drush "$TERMINUS_SITE.$MDE_ENVIRONMENT" -- updatedb -y

  # If exported configuration is available, then import it.
  if [ -f "config/sync/system.site.yml" ] ; then
    terminus -n drush "$TERMINUS_SITE.$MDE_ENVIRONMENT" -- config-import --yes
  fi

  # Clear Drupal cache
  terminus -n drush "$TERMINUS_SITE.$MDE_ENVIRONMENT" -- cr

  # Clear the environment cache
  terminus -n env:clear-cache $TERMINUS_SITE.$MDE_ENVIRONMENT

  # Ensure secrets are set
  terminus -n secrets:set "$TERMINUS_SITE.$MDE_ENVIRONMENT" token "$GITHUB_TOKEN" --file='github-secrets.json' --clear --skip-if-empty

  # Delete old multidev environments associated
  # with a PR that has been merged or closed.
  terminus -n build:env:delete:pr $TERMINUS_SITE --yes
fi
